# How to get configured
# ln -s ~/config/.tmux.conf ~/.tmux.conf
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# tmux new -s configure
# <prefix> + I   # To install plugins.
# [Automatic tpm installation](https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"


# [Migrating from GNU Screen to Tmux](https://robots.thoughtbot.com/migrating-from-screen-to-tmux)
# $ tmux new -s <session name>
# $ tmux attach -t <session name>
# <prefix e.g. C-a> + d => detach
# $ tmux list-buffers  # List Buffers
# Using Panes and Tabs
# - Open a vertical pane: control b + |
# - Open a horizontal pane: control b + â€“
# - Move between panes: control b + direction arrows
# - Drag a pane around: hold control b and use direction arrows
# - Open a new tab: control b + c
# - Move between tabs: control b and use direction arrows
# - Close a tab: control b : and type kill-window
# Other Common Commands
# - List sessions: tmux list-sessions
# - Attach to a specific session: tmux attach -t session
# - Kill a specific session: tmux kill-session -t session
# - Detach from current session: control b : and type detach
# - Detach all connections from session: tmux a -dt session
# - Rename a session: control b : and type rename-session (control b + $)
# - Rename a tab/window: control b : and type rename-window (control b + ,)
# - Rename a pane (control b + :select-pane -T "title") and (set-option -g pane-border-status top) and (set-option -g pane-border-format " [ ###P #T ] ")

# tmux.conf examples
# * [Default TMUX bindings](https://gist.github.com/mzmonsour/8791835)
# * [Tmux default key bindings](https://snippets.aktagon.com/snippets/553-tmux-default-key-bindings)
# * [hobo.house](https://hobo.house/2016/07/16/tmux-for-gnu-screen-refugees-and-vim-users/)
# * [His config](https://raw.githubusercontent.com/sadsfae/misc-dotfiles/master/tmux.conf)

# [Tmux Plugin Manager](https://github.com/tmux-plugins/tpm)
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# <prefix> + I   # Install plugins

# Tutorial
# * [Tmux Cheat Sheet & Quick Reference](https://www.tmuxcheatsheet.com/)
# * [Terminal Multiplexers: Screen, Tmux](http://hyperpolyglot.org/multiplexers)
# * [Moving from GNU Screen to Tmux](https://karl-voit.at/2015/12/14/screen-to-tmux/)



if-shell \
  "[[ $ORDENV_TRUEHOST =~ gpsc ]] \
  " 'TMUX_SSH="ssh -j"' \
  'TMUX_SSH="ssh"'

if-shell \
  "[[ $ORDENV_TRUEHOST =~ gpsc ]]" \
  'TMUX_QUEUE="jobtree -localtime -user=$USER"' \
  'TMUX_QUEUE="squeue --format=\"%.8i %40j %.8u %.2t %.10M %.6D %16R   %V %k\""'

# {
  # Environment Variables
  FZF_TMUX_OPTS='-p80%,60%'   # https://github.com/junegunn/fzf
  TMUX_FZF_OPTIONS="-p -w 80% -h 60% -m"   # https://github.com/sainnhe/tmux-fzf
# }


#set-option -g @resurrect-hook-pre-restore-pane-processes 'tmux switch-client -n && tmux kill-session -t=0'

# {
   # Remapping prefix to Ctrl-a
   #unbind C-b
   set-option -g prefix  C-b  # Main prefix control b
   set-option -g prefix2 C-a  # Alternate prefix control a

   # Color
   # {
      ## set terminal color
      #set-option -g default-terminal "xterm-256color"
      ##set-option -g terminal-overrides ',xterm-24bit:Tc'
      ## [Using Delta with tmux](https://dandavison.github.io/delta/tips-and-tricks/using-delta-with-tmux.html#using-delta-with-tmux)
      #set-option -ga terminal-overrides ",xterm-256color:Tc"

      # [Auto-setting $TERM for default terminal from inside tmux config](https://www.reddit.com/r/tmux/comments/14564g4/autosetting_term_for_default_terminal_from_inside/)
      # You can expand the env var directly within the tmux.conf. So following
      # will do what you described in the post.
      # set -g default-terminal "$TERM"
      # Note TERM should only be set to one of the screen or tmux terms inside
      # of tmux. The tmux terminal types are "new" so they're often not
      # included by default, which is why the above code falls back to screen
      # types. Likewise, the -direct types, which support true color, are often
      # too "new" to be available, so it falls back to -256color or just plain.
      if "expr \"${TERM}\" : '..*-direct'" {
        if "infocmp tmux-direct" {
          set -s default-terminal tmux-direct
        } {
          if "infocmp tmux-256color" {
            set -s default-terminal tmux-256color
          } {
            set -s default-terminal screen-256color
          }
        }
      } {
        if "expr \"${TERM}\" : '..*-256color'" {
          if "infocmp tmux-256color" {
            set -s default-terminal tmux-256color
          } {
            set -s default-terminal screen-256color
          }
        } {
          if "infocmp tmux" {
            set -s default-terminal tmux
          } {
            set -s default-terminal screen
          }
        }
      }

      # highlight current current active pane background
      set-window-option -g window-status-current-style bg=white
      # fix highlight colors in vi mode copy/paste
      # Copy mode colors
      set-window-option -g mode-style fg="#000000"
      set-window-option -g mode-style bg="#FD870D"

      ########################################
      #set-window-option -g window-status-style fg=white
      #setw -g window-status-current-style bg=brightgreen
      #setw -g window-status-current-style fg=black
      #set-option -g status-left-length 20
      #set-option -g status-fg green
      #set-option -g status-bg black
      ##set-option -g status-left "#[fg=red,bright]#S#[default]@#h#[fg=red]:#S#[fg=white] |"
      #set-option -g status-left "#[fg=red,bright]#{session_name} "
      #set-option -g status-right-length 40
      #set-option -g status-right '#[fg=red]#{=-6:host_short}#[default] #[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=cyan,bold]%Y-%m-%d %H:%M#[default]'
   # }

   # Use vi binding in copy mode.
   set-window-option -g mode-keys vi

   # Notifying if other windows has activities
   set-window-option -g monitor-activity on

   # Prevent Applications Like Vim and Less Clearing Screen on Exit
   # http://chenyufei.info/blog/2011-12-15/prevent-vim-less-clear-screen-on-exit/
   set-window-option -g alternate-screen off

   # [Keep the window's name fixed in tmux](https://stackoverflow.com/questions/6041178/keep-the-windows-name-fixed-in-tmux)
   set-option -g allow-rename off

   # scrollback buffer n lines
   set-option -g history-limit 50000

   # Instructs tmux to expect UTF-8 sequences to appear in this window.
   #set-window-option -g utf8 on
   #set-option -g utf8 on
   # Instruct tmux to treat top-bit-set characters in the status-left and
   # status-right strings as UTF-8; notably, this is important for wide
   # characters. This option defaults to off.
   #set-option -g status-utf8 on
# }


# Remove bindings
# {
   unbind '"'   # Default was split-window
   unbind %     # Is replaced by prefix "-"
   unbind R
# }



# Key Bindings
# {
   # Toggling windows with Ctrl-a + Ctrl-a
   bind-key C-a last-window
   # Jump to beginning of line in Bash
   bind-key a send-prefix

   # Based on [More Intuitive Split Commands](https://dev.to/iggredible/useful-tmux-configuration-examples-k3g)
   ## control +b + | vert split
   bind-key "|" split-window -h -c "#{pane_current_path}"
   bind-key "\\" split-window -fh -c "#{pane_current_path}"
   # control +b + - horiz split
   bind-key "-" split-window -v -c "#{pane_current_path}"
   bind-key "_" split-window -fv -c "#{pane_current_path}"

   # [Keeping Current Path](https://dev.to/iggredible/useful-tmux-configuration-examples-k3g)
   #bind c new-window -c "#{pane_current_path}"

   # force a reload of the config file
   bind-key R source-file ~/.tmux.conf

   # choose window/session
   #bind-key '"' list-window
   #bind-key '"' run-shell "tmux switch-client -t \"$(tmux list-windows -a  -F \"#S:#{window_index}\" | fzf --select-1)\""
   #bind-key '"' run-shell -b "tmux switch-client -t \"$(tmux list-windows -a  -F '#S:#{window_index}' | fzf --select-1)\""
   # Depends on [tmux-fzf](https://github.com/sainnhe/tmux-fzf)
   bind-key '"' run-shell -b "~/.tmux/plugins/tmux-fzf/scripts/window.sh switch"

   #bind -n ; command-prompt "select-window -t '%%'"
   bind-key "'" command-prompt -p index "select-window -t ':%%'"   # Default was command-prompt -p index "select-window -t ':%%'"
   #bind-key -T prefix \'  command-prompt -p index "select-window -t ':%%'"

   # {
      # [Swapping Windows](https://dev.to/iggredible/useful-tmux-configuration-examples-k3g)
      bind -r "<" swap-window -d -t -1
      bind -r ">" swap-window -d -t +1
      # Switch windows with Control arrows
      # Doesn't seem to work.
      bind-key -nr C-Right select-window -n
      bind-key -nr C-Left  select-window -p

      ## [How do I reorder tmux windows?](https://superuser.com/a/552493)
      ## Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly right. No need to use the modifier (C-b).
      ## Doesn't see to work.
      #bind-key -r -n C-S-Left  swap-window -t -1
      #bind-key -r -n C-S-Right swap-window -t +1

      # Cycle windows
      bind-key -n M-Right select-window -t +1
      bind-key -n M-Left  select-window -t -1

      # Interfer with bash alt+1, alt+. to copy the first argument of the previous command.
      #bind-key -n M-0 select-window -t 0
      #bind-key -n M-1 select-window -t 1
      #bind-key -n M-2 select-window -t 2
      #bind-key -n M-3 select-window -t 3
      #bind-key -n M-4 select-window -t 4
      #bind-key -n M-5 select-window -t 5
      #bind-key -n M-6 select-window -t 6
      #bind-key -n M-7 select-window -t 7
      #bind-key -n M-8 select-window -t 8
      #bind-key -n M-9 select-window -t 9
   # }

   ## m -> notify me on 10s of silence
   bind-key m set-window-option monitor-activity off \; set-window-option monitor-silence 10
   ## M -> notify me on activity again (as usual)
   bind-key M set-window-option monitor-activity on \; set-window-option monitor-silence 0

   # Quick tools
   # {
      bind-key J new-window -n "jobtree" 'watch --color --differences --interval 60 "$TMUX_QUEUE"'
      bind-key G new-window -n "jobtree nrc_ict" 'watch --color --differences --interval 60 "jobtree -localtime -group nrc_ict"'
      bind-key H new-window -n "htop" "exec htop --user=$USER"
      bind-key S command-prompt "new-window -n Worker 'exec $TMUX_SSH %%'"

      # quick view of processes
      bind-key '~' split-window "exec htop --user=$USER"   # Default was show-messages
   # }

   # [Send a command to every pane/window/session in tmux](https://scripter.co/command-to-every-pane-window-session-in-tmux/)
   # for example history -a
   bind-key C-e command-prompt -p "Command:" \
      "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
             | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""
# }



# Load a color theme
source-file ${HOME}/config/orange.tmuxtheme


#### tmux plugin manager
# {
   # List of plugins
   set-option -g @plugin 'tmux-plugins/tpm'
   set-option -g @plugin 'tmux-plugins/tmux-sensible'
   # [tmux-resurrect](https://github.com/tmux-plugins/tmux-resurrect)
   set-option -g @plugin 'tmux-plugins/tmux-resurrect'
   # [tmux-continuum](https://github.com/tmux-plugins/tmux-continuum)
   set-option -g @plugin 'tmux-plugins/tmux-continuum'
   # [tmux-fzf](https://github.com/sainnhe/tmux-fzf)
   # Use `prefix` + F
   set-option -g @plugin 'sainnhe/tmux-fzf'

   # Key bindings (Tmux Resurrect)
   #set-option -g @resurrect-save 'S'
   #set-option -g @resurrect-restore 'R'
   #prefix + Ctrl-s - save
   #prefix + Ctrl-r - restore
   #
   # [Changing the default keys: my preferred method](http://www.deanbodenham.com/learn/tmux-resurrect.html)
   #change defaults for resurrect (two steps)
   #1. unbind the current defaults C-s and C-r
   #unbind-key -T prefix C-s
   unbind-key -T prefix C-r
   unbind-key -T prefix C-R

   #2. Still use prefix C-s and C-r, but now ask for (y/n) response before saving/restoring.
   #This assumes tmux-resurrect is saved to ~/build/tmux/tmux-resurrect folder
   #bind-key -T prefix C-s confirm-before -p 'Save this tmux session? (y/n)' 'run-shell ~/build/tmux/tmux-resurrect/scripts/save.sh'
   bind-key -T prefix C-r confirm-before -p 'Resurrect last tmux session? (y/n)' 'run-shell ~/build/tmux/tmux-resurrect/scripts/restore.sh'
   bind-key -T prefix C-R confirm-before -p 'Resurrect last tmux session? (y/n)' 'run-shell ~/build/tmux/tmux-resurrect/scripts/restore.sh'


   # set continuum to restore sessions automatically
   #set-option -g @continuum-restore 'on'
   set-option -g @continuum-save-interval '60'
   # restore vim sessions
   # for vim
   #set-option -g @resurrect-strategy-vim 'session'
   # Other examples:
   # set-option -g @plugin 'github_username/plugin_name'
   # set-option -g @plugin 'git@github.com/user/plugin'
   # set-option -g @plugin 'git@bitbucket.com/user/plugin'


   run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux
   run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux

   # Initialize TMUX plugin manager (keep this line at the very bottom of
   # tmux.conf)
   run '~/.tmux/plugins/tpm/tpm'
# }
