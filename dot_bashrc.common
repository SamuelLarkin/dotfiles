#[[ -s ~/.alias ]] && . ~/.alias || true
#[[ -e ~/.bashrc.$USER ]] && . ~/.bashrc.$USER || true

function setPrompt {
   #local -r host_ip=`hostname -I | sed 's/.*\.\([0-9]\+\).*/\1/'`
   # https://wiki.archlinux.org/index.php/Color_Bash_Prompt
   #export PS1='\[\033[1;33m\][\u@`hostname -s`]\[\033[0;36m\]\W\$\[\033[0m\] '
   local -r White='\[\e[01;37m\]'
   local -r Red='\[\e[01;31m\]'
   local -r Green='\[\e[01;32m\]'
   local -r BYellow='\[\e[01;33m\]'
   local -r BBlue='\[\e[01;34m\]'
   local -r Cyan='\[\e[0;36m\]'
   local -r FancyX=${Red}'\342\234\227'
   local -r Checkmark='\342\234\223'
   local -r Reset='\[\e[00m\]'

   local -r return_code="${White}\$?"
   local -r return_code_symbol="\$(if [[ \$? == 0 ]]; then echo \"${Green}${Checkmark}\"; else echo \"${FancyX}\"; fi)"
   local -r colorize_return_code="$return_code $return_code_symbol"
   #local -r what_is_the_current_machine="${BYellow}[\u@`hostname -s`.$host_ip]"
   local -r current_directory="${Cyan}\W"
   #local -r git_status=${BBlue}'$(__git_ps1 " (%s)")'
   local -r superuser_indicator='\$'

   export PS1="${colorize_return_code} ${what_is_the_current_machine}${current_directory}${git_status}${superuser_indicator}${Reset} "
}
setPrompt

export GIT_PS1_SHOWDIRTYSTATE=1
#export GIT_PS1_SHOWUPSTREAM="auto"
export LS_OPTIONS="--color"
export LC_ALL="en_CA.UTF-8"
export LC_CTYPE="en_CA.iso-8859-1"
export LC_COLLATE="C"
export EDITOR="vim"
export PORTAGE_NO_ETAGS=1

# Never lose a bash history because you are working with multiple windows.
shopt -s histappend
export HISTCONTROL=ignoredups
export HISTFILESIZE=100000   # HISTFILESIZE variable controls the maximum number of lines that we can write back to the history file on disk.
export HISTSIZE=100000   # HISTSIZE variable is the maximum number of lines of history that we can store in memory.
export HISTTIMEFORMAT="%F %T "

export DOCKER_BUILDKIT=1

# less options
export LESSCHARSET=utf-8
export LESS="--no-init --QUIET --RAW-CONTROL-CHARS --chop-long-lines --ignore-case --search-skip-screen"  # "-XQRSia"
# If supported, change search result to black text on yellow background.
# Looks like the feature was introduced in 581.
man less | grep 'use-color' &> /dev/null && export LESS="$LESS --use-color --color=Sky"

# FzF popup in tmux if suppported
man tmux | grep --quiet display-popup && export FZF_TMUX_OPTS='-p80%,60%'

# FzF
# [fzf Web Color Picker](https://minsw.github.io/fzf-color-picker/)
declare -a FZF_COLORS=(
   --color=fg:#ccc8c8,bg:#2f1642,hl:#5f87af
   --color=fg+:#d0d0d0,bg+:#71339e,hl+:#5fd7ff
   --color=info:#afaf87,prompt:#d7005f,pointer:#af5fff
   --color=marker:#87ff00,spinner:#af5fff,header:#87afaf
   )
# FzF preview related configuration
# [Keyboard bindings for scrolling preview window?](https://github.com/junegunn/fzf.vim/issues/358#issuecomment-841665170)
declare -a FZF_BINDINGS=(
   --bind ctrl-/:toggle-preview
   --bind ctrl-y:preview-up,ctrl-e:preview-down
   --bind ctrl-b:preview-page-up,ctrl-f:preview-page-down
   --bind ctrl-u:preview-half-page-up,ctrl-d:preview-half-page-down
   --bind shift-up:preview-top,shift-down:preview-bottom
   --bind alt-up:half-page-up,alt-down:half-page-down
   )
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS" ${FZF_COLORS[@]} ${FZF_BINDINGS[@]}"
# [Key bindings for command-line](https://github.com/junegunn/fzf#key-bindings-for-command-line)
export FZF_ALT_C_OPTS="--preview 'tree -C {}'"
export FZF_CTRL_R_OPTS="
   --bind 'ctrl-/:toggle-preview'
   --preview 'echo {}'
   --preview-window up:3:hidden:wrap
   --color header:italic
   --header 'Press CTRL-/ to see a command preview'"
export FZF_CTRL_T_OPTS="
   --bind 'ctrl-/:change-preview-window(down|hidden|)'
   --preview 'bat -n --color=always {}'
   --color header:italic
   --header 'Press CTRL-/ to preview'"


umask 0007


# javac **/*.java
shopt -s globstar

# STOP FUCKING ESCAPING when tab
shopt -s direxpand

# Enable zoxide
which zoxide &> /dev/null && eval "$(zoxide init bash)"

# Enable starship prompt
which starship &> /dev/null && eval "$(starship init bash)"

# Enable fzf completion and key-bindings.
fzf --bash &> /dev/null && eval "$(fzf --bash)"

# [Use `bat` to display man pages](https://github.com/sharkdp/bat#man)
#which bat &> /dev/null && export MANPAGER="sh -c 'col --no-backspaces --spaces | bat --language man --plain'"
which bat &> /dev/null && export MANPAGER="sh -c 'col -bx | bat --language man --plain'"


# Disabled since we prefer fzf's CTRL+R
#shopt -q login_shell && bind '"\C-g": forward-search-history'
#[[ $- == *i* ]] && bind '"\C-g": forward-search-history'
